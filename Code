# import math
# import numpy as np
# import matplotlib.pyplot as plt
# def calculate_projectile_motion(v0, angle_deg, y0=0.0, g=9.81):
# angle_rad = math.radians(angle_deg)
 # vx = v0 * math.cos(angle_rad)
 # vy = v0 * math.sin(angle_rad)
  # t_up = vy / g
  # h_max = y0 + (vy ** 2) / (2*g)
  # t_total = t_up + math.sqrt((2 *(h_max if y0 == 0 else(h_max + y0)))/g)
   # L = vx * t_total
#t_points = np.linspace(0, t_total, 100)
   # x_points = vx * t_points
   # y_points = y0 + vy * t_points - 0.5*g*t_points**2
   # plt.figure(figsize=(10,6))
   # plt.plot(x_points,y_points,label = "Траектория" , color = "blue")
   # plt.scatter([0,L],[y0,0], color = "red")
   # plt.axhline(0,color = "black", linestyle = "--")
   # plt.xlabel("Расстояние(м)")
   # plt.ylabel("Высота(м)")
   # plt.title(f"Траектория полета (v0 = {v0} м/с угол = {angle_deg}°)")
   # plt.grid(True)
   # plt.legend()
   # plt.show()
 #return {
     #"Время полета (с)" : t_total,
     #"Максимальная высота (м)" : h_max,
     #"Дальность полета (м)" : L,
     #"Горизонтальная скорость (м/с)" : vx,
     #"Вертикальная скорость (м/с)" : vy
    #}
#print("Код, рассчитывающий полет тела")
#y0 = float(input("Начальная высота (м, ):") or 0)
#angle_deg = float(input("Угол броска (градусы,  0-90):") )
#v0 = float(input("Начальная скорость (м/с, ):"))
#if angle_deg < 0 or angle_deg > 90:
     #print("Ошибка")
#else:
 #results = calculate_projectile_motion(v0,angle_deg,y0)
 #print(results)
